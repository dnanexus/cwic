#!/usr/bin/env bash

set -e

DNANEXUS_HOME="/home/dnanexus"
JOB_INPUT_FILE="${DNANEXUS_HOME}/job_input.json"
ENV="${DNANEXUS_HOME}/environment"

# if user provided their authentication token in the input, use it
# otherwise source environment to make use of the job's token
# the token is required to dxfuse-mount the project
if command -v dx >/dev/null 2>&1; then
    if [[ -f /home/dnanexus/credentials ]]; then
        user_token=$(jq -r '.dnanexus.token' /home/dnanexus/credentials)
        if [[ -n $user_token && $user_token != "null" ]]; then
            dx login --noprojects --token $user_token
            dx whoami
            export DX_PROJECT_CONTEXT_ID=$(jq -r '.project' /home/dnanexus/dnanexus-job.json)
        else
            source /home/dnanexus/environment
        fi
    else
        source /home/dnanexus/environment
    fi
    DX_PROJECT_NAME=$(dx describe $DX_PROJECT_CONTEXT_ID  --json | jq .name)
fi

# Make sure HOME is /home/cwic, which may haven been overwritten
# if /home/dnanexus/environment is sourced
export HOME=/home/cwic

if command -v dxfuse >/dev/null 2>&1; then
    MOUNT_POINT=/project
    if [[ -n $DX_PROJECT_NAME ]]; then
        echo "Mounting ${DX_PROJECT_NAME} in $MOUNT_POINT"
    else
        echo "Mounting ${DX_PROJECT_CONTEXT_ID} in $MOUNT_POINT"
    fi
    dxfuse-mount -verbose 2 -uid $(id -u) -gid $(id -g) $MOUNT_POINT $DX_PROJECT_CONTEXT_ID
fi

# Set DX_WORKSPACE_ID to project so that dx upload uploads to project and not to job workspace in non-interactive mode
if [[ -f "$JOB_INPUT_FILE" ]] && [[ "$(jq -r ".cmd" <"${JOB_INPUT_FILE}")" != "null" ]]; then
    export DX_WORKSPACE_ID=$DX_PROJECT_CONTEXT_ID
fi

echo "Executing: $@"
eval "$@"

dxfuse-sync


